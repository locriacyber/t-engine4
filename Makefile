# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  TEngine_config = debug
  physfs_config = debug
  minilua_config = debug
  buildvm_config = debug
  luajit2_config = debug
  luasocket_config = debug
  fov_config = debug
  lpeg_config = debug
  luaprofiler_config = debug
  tcodimport_config = debug
  expatstatic_config = debug
  lxp_config = debug
  luamd5_config = debug
  luazlib_config = debug
  luabitop_config = debug
  te4_bzip_config = debug
  te4_wfc_config = debug
  utf8proc_config = debug
endif
ifeq ($(config),release)
  TEngine_config = release
  physfs_config = release
  minilua_config = release
  buildvm_config = release
  luajit2_config = release
  luasocket_config = release
  fov_config = release
  lpeg_config = release
  luaprofiler_config = release
  tcodimport_config = release
  expatstatic_config = release
  lxp_config = release
  luamd5_config = release
  luazlib_config = release
  luabitop_config = release
  te4_bzip_config = release
  te4_wfc_config = release
  utf8proc_config = release
endif

PROJECTS := TEngine physfs minilua buildvm luajit2 luasocket fov lpeg luaprofiler tcodimport expatstatic lxp luamd5 luazlib luabitop te4-bzip te4-wfc utf8proc

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

TEngine: physfs luajit2 fov luasocket luaprofiler lpeg tcodimport lxp expatstatic luamd5 luazlib luabitop te4-bzip te4-wfc utf8proc
ifneq (,$(TEngine_config))
	@echo "==== Building TEngine ($(TEngine_config)) ===="
	@${MAKE} --no-print-directory -C build -f TEngine.make config=$(TEngine_config)
endif

physfs:
ifneq (,$(physfs_config))
	@echo "==== Building physfs ($(physfs_config)) ===="
	@${MAKE} --no-print-directory -C build -f physfs.make config=$(physfs_config)
endif

minilua:
ifneq (,$(minilua_config))
	@echo "==== Building minilua ($(minilua_config)) ===="
	@${MAKE} --no-print-directory -C build -f minilua.make config=$(minilua_config)
endif

buildvm: minilua
ifneq (,$(buildvm_config))
	@echo "==== Building buildvm ($(buildvm_config)) ===="
	@${MAKE} --no-print-directory -C build -f buildvm.make config=$(buildvm_config)
endif

luajit2: buildvm
ifneq (,$(luajit2_config))
	@echo "==== Building luajit2 ($(luajit2_config)) ===="
	@${MAKE} --no-print-directory -C build -f luajit2.make config=$(luajit2_config)
endif

luasocket:
ifneq (,$(luasocket_config))
	@echo "==== Building luasocket ($(luasocket_config)) ===="
	@${MAKE} --no-print-directory -C build -f luasocket.make config=$(luasocket_config)
endif

fov:
ifneq (,$(fov_config))
	@echo "==== Building fov ($(fov_config)) ===="
	@${MAKE} --no-print-directory -C build -f fov.make config=$(fov_config)
endif

lpeg:
ifneq (,$(lpeg_config))
	@echo "==== Building lpeg ($(lpeg_config)) ===="
	@${MAKE} --no-print-directory -C build -f lpeg.make config=$(lpeg_config)
endif

luaprofiler:
ifneq (,$(luaprofiler_config))
	@echo "==== Building luaprofiler ($(luaprofiler_config)) ===="
	@${MAKE} --no-print-directory -C build -f luaprofiler.make config=$(luaprofiler_config)
endif

tcodimport:
ifneq (,$(tcodimport_config))
	@echo "==== Building tcodimport ($(tcodimport_config)) ===="
	@${MAKE} --no-print-directory -C build -f tcodimport.make config=$(tcodimport_config)
endif

expatstatic:
ifneq (,$(expatstatic_config))
	@echo "==== Building expatstatic ($(expatstatic_config)) ===="
	@${MAKE} --no-print-directory -C build -f expatstatic.make config=$(expatstatic_config)
endif

lxp:
ifneq (,$(lxp_config))
	@echo "==== Building lxp ($(lxp_config)) ===="
	@${MAKE} --no-print-directory -C build -f lxp.make config=$(lxp_config)
endif

luamd5:
ifneq (,$(luamd5_config))
	@echo "==== Building luamd5 ($(luamd5_config)) ===="
	@${MAKE} --no-print-directory -C build -f luamd5.make config=$(luamd5_config)
endif

luazlib:
ifneq (,$(luazlib_config))
	@echo "==== Building luazlib ($(luazlib_config)) ===="
	@${MAKE} --no-print-directory -C build -f luazlib.make config=$(luazlib_config)
endif

luabitop:
ifneq (,$(luabitop_config))
	@echo "==== Building luabitop ($(luabitop_config)) ===="
	@${MAKE} --no-print-directory -C build -f luabitop.make config=$(luabitop_config)
endif

te4-bzip:
ifneq (,$(te4_bzip_config))
	@echo "==== Building te4-bzip ($(te4_bzip_config)) ===="
	@${MAKE} --no-print-directory -C build -f te4-bzip.make config=$(te4_bzip_config)
endif

te4-wfc:
ifneq (,$(te4_wfc_config))
	@echo "==== Building te4-wfc ($(te4_wfc_config)) ===="
	@${MAKE} --no-print-directory -C build -f te4-wfc.make config=$(te4_wfc_config)
endif

utf8proc:
ifneq (,$(utf8proc_config))
	@echo "==== Building utf8proc ($(utf8proc_config)) ===="
	@${MAKE} --no-print-directory -C build -f utf8proc.make config=$(utf8proc_config)
endif

clean:
	@${MAKE} --no-print-directory -C build -f TEngine.make clean
	@${MAKE} --no-print-directory -C build -f physfs.make clean
	@${MAKE} --no-print-directory -C build -f minilua.make clean
	@${MAKE} --no-print-directory -C build -f buildvm.make clean
	@${MAKE} --no-print-directory -C build -f luajit2.make clean
	@${MAKE} --no-print-directory -C build -f luasocket.make clean
	@${MAKE} --no-print-directory -C build -f fov.make clean
	@${MAKE} --no-print-directory -C build -f lpeg.make clean
	@${MAKE} --no-print-directory -C build -f luaprofiler.make clean
	@${MAKE} --no-print-directory -C build -f tcodimport.make clean
	@${MAKE} --no-print-directory -C build -f expatstatic.make clean
	@${MAKE} --no-print-directory -C build -f lxp.make clean
	@${MAKE} --no-print-directory -C build -f luamd5.make clean
	@${MAKE} --no-print-directory -C build -f luazlib.make clean
	@${MAKE} --no-print-directory -C build -f luabitop.make clean
	@${MAKE} --no-print-directory -C build -f te4-bzip.make clean
	@${MAKE} --no-print-directory -C build -f te4-wfc.make clean
	@${MAKE} --no-print-directory -C build -f utf8proc.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   TEngine"
	@echo "   physfs"
	@echo "   minilua"
	@echo "   buildvm"
	@echo "   luajit2"
	@echo "   luasocket"
	@echo "   fov"
	@echo "   lpeg"
	@echo "   luaprofiler"
	@echo "   tcodimport"
	@echo "   expatstatic"
	@echo "   lxp"
	@echo "   luamd5"
	@echo "   luazlib"
	@echo "   luabitop"
	@echo "   te4-bzip"
	@echo "   te4-wfc"
	@echo "   utf8proc"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"